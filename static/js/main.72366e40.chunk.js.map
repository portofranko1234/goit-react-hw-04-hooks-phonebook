{"version":3,"sources":["components/Form/Form.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["Form","state","name","number","onInputChange","event","currentTarget","value","setState","onSubmit","preventDefault","contact","id","shortid","generate","props","reset","this","onChange","type","pattern","title","required","Component","Filter","ContactList","contacts","onDeleteContact","map","onClick","App","useState","JSON","parse","window","localStorage","getItem","initialContacts","setContacts","filter","setFilter","useEffect","setItem","stringify","find","toLowerCase","alert","prevContacts","normalizedFilter","includes","getContactshown","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uiBAIqBA,E,4MACnBC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,cAAgB,SAACC,GACf,MAAwBA,EAAMC,cAAtBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAE1BE,SAAW,SAACJ,GACVA,EAAMK,iBACN,IAAMC,EAAU,CACdC,GAAIC,IAAQC,WACZZ,KAAM,EAAKD,MAAMC,KACjBC,OAAQ,EAAKF,MAAME,QAErB,EAAKY,MAAMN,SAASE,GACpB,EAAKK,S,EAEPA,MAAQ,WACN,EAAKR,SAAS,CAAEN,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,OACE,uBAAMM,SAAUQ,KAAKR,SAArB,UACE,yCAEE,uBACES,SAAUD,KAAKb,cACfG,MAAOU,KAAKhB,MAAMC,KAClBiB,KAAK,OACLjB,KAAK,OACLkB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,0CAEE,uBACEf,MAAOU,KAAKhB,MAAME,OAClBe,SAAUD,KAAKb,cACfe,KAAK,MACLjB,KAAK,SACLkB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,wBAAQH,KAAK,SAAb,iC,GAnD0BI,aCUnBC,EAXA,SAAC,GAAD,IAAGjB,EAAH,EAAGA,MAAOW,EAAV,EAAUA,SAAV,OACb,mDAEE,uBAAOC,KAAK,OAAOZ,MAAOA,EAAOW,SAAUA,QCgBhCO,EAnBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,gBAAb,OAClB,6BACGD,EAASE,KAAI,gBAAGhB,EAAH,EAAGA,GAAIV,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,+BACE,8BACGD,EACD,+BAAOC,OAET,wBAAQgB,KAAK,SAASU,QAAS,kBAAMF,EAAgBf,IAArD,0DALOA,S,QCEA,SAASkB,IACtB,MAAgCC,oBAAS,WAAO,IAAD,EAC7C,iBACEC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,oBADzC,QACyDC,KAF3D,mBAAOX,EAAP,KAAiBY,EAAjB,KAKA,EAA4BP,mBAAS,IAArC,mBAAOQ,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACRP,OAAOC,aAAaO,QAAQ,WAAYV,KAAKW,UAAUjB,MACtD,CAACA,IAoCJ,OACE,gCACE,cAAC,EAAD,CAAMjB,SApCgB,SAAC,GAAsB,IAApBP,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACjC,GACEuB,EAASkB,MACP,SAACjC,GAAD,OAAaA,EAAQT,KAAK2C,gBAAkB3C,EAAK2C,iBAGnDC,MAAM,GAAD,OAAI5C,EAAJ,sCALP,CASA,IAAMS,EAAU,CACdC,GAAIC,IAAQC,WACZZ,OACAC,UAGFmC,GAAY,SAACS,GAAD,OAAmBpC,GAAnB,mBAA+BoC,WAqBzC,cAAC,EAAD,CAAQxC,MAAOgC,EAAQrB,SAbN,SAACb,GACpBmC,EAAUnC,EAAMC,cAAcC,UAa5B,cAAC,EAAD,CACEmB,SAZkB,WACtB,IAAMsB,EAAmBT,EAAOM,cAChC,OAAOnB,EAASa,QAAO,SAAC5B,GAAD,OACrBA,EAAQT,KAAK2C,cAAcI,SAASD,MASxBE,GACVvB,gBAtBgB,SAACwB,GACrBb,GAAY,SAACS,GAAD,OACVA,EAAaR,QAAO,SAAC5B,GAAD,OAAaA,EAAQC,KAAOuC,cCnCtDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACxB,EAAD,MAEFyB,SAASC,eAAe,W","file":"static/js/main.72366e40.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\"; // ES6\r\n\r\nexport default class Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  onInputChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n    this.props.onSubmit(contact);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            onChange={this.onInputChange}\r\n            value={this.state.name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Phone\r\n          <input\r\n            value={this.state.number}\r\n            onChange={this.onInputChange}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contacts</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    Filter by name\r\n    <input type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\"; // ES6\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id}>\r\n        <p>\r\n          {name}\r\n          <span>{number}</span>\r\n        </p>\r\n        <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n          Удалить\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\nexport default ContactList;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Form from \"./components/Form\";\r\nimport Filter from \"./components/Filter\";\r\nimport ContactList from \"./components/ContactList\";\r\nimport initialContacts from \"./components/Data/InitialContacts.json\";\r\nimport shortid from \"shortid\";\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useState(() => {\r\n    return (\r\n      JSON.parse(window.localStorage.getItem(\"contacts\")) ?? initialContacts\r\n    );\r\n  });\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const formSubmitHandler = ({ name, number }) => {\r\n    if (\r\n      contacts.find(\r\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\r\n      )\r\n    ) {\r\n      alert(`${name} already exsist at phonebook `);\r\n      return;\r\n    }\r\n\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    setContacts((prevContacts) => [contact, ...prevContacts]);\r\n  };\r\n  const contactDelete = (contactId) => {\r\n    setContacts((prevContacts) =>\r\n      prevContacts.filter((contact) => contact.id !== contactId)\r\n    );\r\n  };\r\n\r\n  const changeFilter = (event) => {\r\n    setFilter(event.currentTarget.value);\r\n  };\r\n  const getContactshown = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={formSubmitHandler} />\r\n      <Filter value={filter} onChange={changeFilter} />\r\n      <ContactList\r\n        contacts={getContactshown()}\r\n        onDeleteContact={contactDelete}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}